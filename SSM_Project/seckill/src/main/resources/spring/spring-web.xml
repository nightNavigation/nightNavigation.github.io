<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/mvc
						   http://www.springframework.org/schema/mvc/spring-mvc.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置 SpringMVC -->
    <!-- 1：开启SpringMVC注解模式 -->
    <!--    简化配置：
        （1）自动注册DefaultAnnotationHandlerMapping, AnnotationMethodHandlerAdapter
        （2）提供一系列：数据绑定，数字和日期的format @NumberFormat， @DataTimgForimat,
            xml, json 默认读写支持
    -->

    <mvc:annotation-driven/>

    <!-- servlet-mapping 映射路径：“/” -->
    <!-- 2：静态资源默认servlet配置
        1、 加入对静态资源的处理：js, gif, png
        2、允许使用 “/” 做整体映射
     -->
    <mvc:default-servlet-handler/>

    <!-- 3:配置 jsp 显示 ViewResolver，配置视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!-- 配置逻辑视图的前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 配置逻辑视图的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置 HTML 显示 viewResolver 视图解析器 -->
    <!-- 设置freeMarker的配置文件路径 -->
    <!-- 这里配置的是freemarker -->
<!--    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
<!--        &lt;!&ndash; 注意：只有在maven项目的pom.xml文件中添加了 <artifactId>spring-context-support</artifactId> 依赖-->
<!--            <property name=""> 中 name 才有属性值"templateLoaderPath"、"freemarkerSettings"，不然就会报错-->
<!--         &ndash;&gt;-->
<!--        &lt;!&ndash; 配置HTML文件路径 &ndash;&gt;-->
<!--        <property name="templateLoaderPath" value="/WEB-INF/views/"/>-->
<!--        <property name="freemarkerSettings">-->
<!--            <props>-->
<!--                <prop key="template_update_delay">0</prop>-->
<!--                <prop key="default_encoding">UTF-8</prop>-->
<!--                <prop key="number_format">0.##########</prop>-->
<!--                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>-->
<!--                <prop key="classic_compatible">true</prop>-->
<!--                <prop key="template_exception_handler">ignore</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->
<!--    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
<!--        &lt;!&ndash;注释掉的下方代码是指引freemarker的基本信息的配置位置，因为配置信息即 <bean id="freemarkerConfig" ></bean>
            也可将该配置信息转移到/WEB-INF/config/applicationContext.xml文件下 &ndash;&gt;-->
<!--        &lt;!&ndash;<property name="location" value="classpath:/WEB-INF/config/freemarker.properties" />&ndash;&gt;-->
<!--    </bean>-->
<!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
<!--        <property name="exposeRequestAttributes" value="true" />-->
<!--        <property name="exposeSessionAttributes" value="true" />-->
<!--        <property name="viewClass">-->
<!--            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>-->
<!--        </property>-->
<!--        <property name="cache"><value>true</value></property>-->
<!--        &lt;!&ndash;这里需要注意一下，我注释了下面这样一行代码，这行代码的意思就是指引freemarker需要解析的文件的位置。注释掉原因是因为-->
<!--         applicationContext.xml里有这样一行代码：<property name="templateLoaderPath" value="/WEB-INF/views/" /> 已经指定了视图位置。如果我们这里依然保留下方代码，页面回报406的找不到的错误 &ndash;&gt;-->
<!--        &lt;!&ndash; html视图解析器 必须先配置freemarkerConfig,注意html是没有prefix前缀属性的 &ndash;&gt;-->
<!--        &lt;!&ndash;<property name="prefix"><value>/WEB-INF/views/</value></property>&ndash;&gt;-->
<!--        <property name="suffix"><value>.html</value></property>-->
<!--        <property name="contentType">-->
<!--            <value>text/html; charset=UTF-8</value>-->
<!--        </property>-->
<!--        &lt;!&ndash; order属性进行设置 系统首先按解析器的order值进行查找 首先使用FreeMarkerViewResolver解析器调用canHandle方法，-->
<!--        判断当前解析器对视图是否能够解析。如不能解析在依次调用其他的。-->
<!--        同时创建两个视图解析器的时候，freemarker一定要加order，且优先级为0（最高），否则解析HTML时会报错 &ndash;&gt;-->
<!--        <property name="order" value="0" />-->
<!--    </bean>-->

    <!--扫描Controller,并将其生命周期纳入Spring管理-->
    <context:annotation-config/>

    <!-- 4:扫描 web 相关的bean -->
    <context:component-scan base-package="org.seckill.web" />
<!--        use-default-filters="false">-->
<!--        <context:include-filter type="annotation"-->
<!--                                expression="org.springframework.stereotype.Controller"/>-->
<!--    </context:component-scan>-->
</beans>

